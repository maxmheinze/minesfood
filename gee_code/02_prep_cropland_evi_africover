// Load the sample basins dataset
var basins = ee.FeatureCollection("users/gustav/relevant_basins");

// Define the date range for twenty years
var startDate = '2001-01-01';
var endDate = '2024-05-01';

// Load MODIS EVI image collection
var modisEVI = ee.ImageCollection("MODIS/061/MOD13Q1")
  .filterDate(startDate, endDate)
  .select(['EVI', 'DetailedQA']);

// Load cropland mask dataset
var croplandMask = ee.ImageCollection("projects/sat-io/open-datasets/DEAF/CROPLAND-EXTENT/mask")
  .mosaic()
  .select('b1');  // Assuming 'cropland_extent' is the band name for cropland classification

// Function to mask out low-quality pixels using DetailedQA band
function maskQuality(image) {
  var qa = image.select('DetailedQA');
  var mask = qa.bitwiseAnd(3).eq(0).or(qa.bitwiseAnd(3).eq(1));
  return image.updateMask(mask).select('EVI').copyProperties(image, ['system:time_start']);
}

// Apply the quality mask to the MODIS EVI collection
var filteredModisEVI = modisEVI.map(maskQuality);

// Apply cropland mask to each EVI image
var croplandEVI = filteredModisEVI.map(function(image) {
  return image.updateMask(croplandMask);
});

// Scale the EVI values by 0.0001
var scaledModisEVI = croplandEVI.map(function(image) {
  return image.multiply(0.0001).copyProperties(image, ['system:time_start']);
});

// Function to calculate mean EVI for each image
function calculateMeanEVI(image) {
  var date = image.date().format('YYYY-MM-dd');
  var imageID = image.id();
  return image.reduceRegions({
    collection: basins,
    reducer: ee.Reducer.mean(),
    scale: 250
  }).map(function(feature) {
    return feature.set({
      'image_date': date,
      'basin_id': feature.id(),
      'HYBAS_ID': feature.get('HYBAS_ID'),
      'mean_EVI': feature.get('mean'),
      'image_id': imageID  // Optionally, add image ID for reference
    });
  });
}

// Apply the mean EVI calculation to each image in the collection
var meanEVICollection = scaledModisEVI.map(calculateMeanEVI).flatten();

// Convert the results to a FeatureCollection
var meanEVIResults = ee.FeatureCollection(meanEVICollection);

// Export the results to a table
Export.table.toDrive({
  collection: meanEVIResults,
  description: 'mean_cropland_evi_basins',
  fileFormat: 'CSV',
  selectors: ['basin_id', 'HYBAS_ID', 'mean_EVI', 'image_date']  // Include PFAF_ID in selectors
});

// print(meanEVIResults);
