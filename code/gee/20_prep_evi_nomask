// Load the sample basins dataset
var basins = ee.FeatureCollection("users/lukasvashold/relevant_basins");

// Define the date range for twenty years
var startDate = '2000-01-01';
var endDate = '2023-12-31';

// Load MODIS EVI image collection
var modisEVI = ee.ImageCollection("MODIS/061/MOD13Q1")
  .filterDate(startDate, endDate)
  .select(['EVI', 'SummaryQA']);

// Function for Cloud Masking
var bitwiseExtract = function(input, fromBit, toBit) {
  var maskSize = ee.Number(1).add(toBit).subtract(fromBit);
  var mask = ee.Number(1).leftShift(maskSize).subtract(1);
  return input.rightShift(fromBit).bitwiseAnd(mask);
};

var maskSnowAndClouds = function(image) {
  var summaryQa = image.select('SummaryQA');
  var qaMask = bitwiseExtract(summaryQa, 0, 1).lte(1);
  var maskedImage = image.updateMask(qaMask);
  return maskedImage.copyProperties(
    image, ['system:index', 'system:time_start']);
};

// Function for Scaling Pixel Values
var eviScaled = function(image) {
  var scaled = image.divide(10000);
  return scaled.copyProperties(
    image, ['system:index', 'system:time_start']);
};

// Apply the functions and select the 'EVI' band
var scaledModisEVI = modisEVI
  .map(maskSnowAndClouds)
  .map(eviScaled)
  .select('EVI');

// Function to calculate mean EVI for each image using the cropland mask
function calculateMeanEVI(image) {
  return image.reduceRegions({
    collection: basins,
    reducer: ee.Reducer.mean(),
    scale: 250
  }).map(function(feature) {
    return feature.set({
      'image_date': image.date().format('YYYY-MM-dd'),
      'basin_id': feature.id(),
      'HYBAS_ID': feature.get('HYBAS_I'), // apparently the shape file has not the full name
      'mean_EVI': feature.get('mean')
    });
  });
}

// // Split the data into smaller chunks by year
var years = ee.List.sequence(2000, 2023);

// mean per basin, for each 16-day period separately
var meanEVIResults = ee.FeatureCollection(years.map(function(year) {
  var yearStr = ee.Number(year).format();
  var yearlyModisEVI = scaledModisEVI.filter(ee.Filter.calendarRange(year, year, 'year'));
  return yearlyModisEVI.map(calculateMeanEVI).flatten();
}).flatten());

// maximum per pixel
var maxEVIResults = ee.FeatureCollection(years.map(function(year) {
  var yearStr = ee.Number(year).format("%.0f");
  var dateStr = ee.String(yearStr).cat('-06-30');
  var dateDat = ee.Date(dateStr);
  var yearlyModisEVI = scaledModisEVI.filter(ee.Filter.calendarRange(year, year, 'year'));
  var maxModisEVImax = yearlyModisEVI.max().set('system:time_start', dateDat.millis()); 
  return calculateMeanEVI(maxModisEVImax);
}).flatten());

// Export the results to tables
Export.table.toDrive({
  collection: meanEVIResults.flatten(),
  description: '00_evi-mean_nomask',
  folder: 'jde_basins', 
  fileFormat: 'CSV',
  selectors: ['basin_id', 'HYBAS_ID', 'mean_EVI', 'image_date']
});

Export.table.toDrive({
  collection: maxEVIResults.flatten(),
  description: '10_evi-max_nomask',
  folder: 'jde_basins', 
  fileFormat: 'CSV',
  selectors: ['basin_id', 'HYBAS_ID', 'mean_EVI', 'image_date']
});